version: '3.8'

services:
  # Сервис RabbitMQ с включением плагинов RabbitMQ Streams
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - "5552:5552"
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbitmq_stream advertised_host rabbitmq'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      sh -c "
        rabbitmq-server &
        sleep 10 &&
        rabbitmq-plugins enable rabbitmq_stream rabbitmq_stream_management &&
        tail -f /dev/null
      "

  # Сервис для генератора сообщений (чисел)
  generator:
    build: .
    container_name: generator
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: 1
    command: >
      sh -c "
        sleep 10 && python generator.py
      "

  # Сервис для клиента, который рассчитывает минимальное и максимальное значение
  client-min-max:
    build: .
    container_name: client-min-max
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: 1
    command: >
      sh -c "
        sleep 10 && python client_min_max.py
      "

  # Сервис для клиента, который рассчитывает среднее значение
  client-average:
    build: .
    container_name: client-average
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: 1
    command: >
      sh -c "
        sleep 10 && python client_average.py
      "

  # Сервис для клиента, который рассчитывает медиану
  client-median:
    build: .
    container_name: client-median
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: 1
    command: >
      sh -c "
        sleep 10 && python client_median.py
      "
